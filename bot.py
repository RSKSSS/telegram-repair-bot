"""
Telegram –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏ —Å–µ—Ä–≤–∏—Å–∞ —Ä–µ–º–æ–Ω—Ç–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤
"""

import os
import re
from typing import Optional, Dict, List

import telebot
from telebot.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply

from config import ROLES, ORDER_STATUSES
from database import (
    save_user, get_user, get_all_users, get_user_role, is_user_approved,
    get_unapproved_users, approve_user, reject_user, update_user_role,
    save_order, update_order, get_order, get_orders_by_user, get_all_orders,
    get_assigned_orders, assign_order, get_technicians, get_order_technicians,
    set_user_state, get_user_state, get_current_order_id, clear_user_state,
    save_problem_template, update_problem_template, get_problem_template,
    get_problem_templates, delete_problem_template, delete_user, delete_order
)
from utils import (
    get_main_menu_keyboard, get_order_status_keyboard, get_order_management_keyboard,
    get_technician_order_keyboard, get_back_to_main_menu_keyboard, get_approval_requests_keyboard,
    get_user_management_keyboard, is_admin, is_dispatcher, is_technician,
    send_order_notification_to_admins, validate_phone, format_orders_list, get_technician_list_keyboard,
    get_role_name, get_user_list_for_deletion, get_order_list_for_deletion
)
from logger import get_component_logger, DEBUG, INFO, WARNING, ERROR, CRITICAL, log_function_call

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
logger = get_component_logger('bot', level=INFO)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –ø—Ä–æ–±–ª–µ–º
TEMPLATE_TITLE_INPUT = "template_title_input"
TEMPLATE_DESCRIPTION_INPUT = "template_description_input"
TEMPLATE_EDIT_TITLE_INPUT = "template_edit_title_input"
TEMPLATE_EDIT_DESCRIPTION_INPUT = "template_edit_description_input"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@log_function_call(logger)
def set_user_state(user_id: int, state: str, order_id: Optional[int] = None) -> None:
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    from database import set_user_state as db_set_user_state
    logger.debug(f"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {state}, order_id={order_id}")
    db_set_user_state(user_id, state, order_id)

@log_function_call(logger)
def clear_user_state(user_id: int) -> None:
    """
    –û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    from database import clear_user_state as db_clear_user_state
    logger.debug(f"–û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    db_clear_user_state(user_id)

@log_function_call(logger)
def get_user_state(user_id: int) -> Optional[str]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    from database import get_user_state as db_get_user_state
    state = db_get_user_state(user_id)
    logger.debug(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {state}")
    return state

@log_function_call(logger)
def get_current_order_id(user_id: int) -> Optional[int]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    from database import get_current_order_id as db_get_current_order_id
    order_id = db_get_current_order_id(user_id)
    logger.debug(f"–ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—É—â–∏–π order_id –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {order_id}")
    return order_id

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start_command(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    """
    user_id = message.from_user.id
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    username = message.from_user.username
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ë–î
    save_user(user_id, first_name, last_name, username)
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user = get_user(user_id)
    
    if not user:
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return
    
    greeting = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.get_full_name()}!"
    
    if user.is_approved:
        # –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
        from utils import get_reply_keyboard
        reply_keyboard = get_reply_keyboard(user_id)
        
        if user.is_admin():
            bot.send_message(
                user_id,
                f"{greeting}\n–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä*.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=reply_keyboard,
                parse_mode="Markdown"
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
            bot.send_message(
                user_id,
                "üì≤ *–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º:*",
                reply_markup=get_main_menu_keyboard(user_id),
                parse_mode="Markdown"
            )
        elif user.is_dispatcher():
            bot.send_message(
                user_id,
                f"{greeting}\n–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ *–î–∏—Å–ø–µ—Ç—á–µ—Ä*.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=reply_keyboard,
                parse_mode="Markdown"
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
            bot.send_message(
                user_id,
                "üì≤ *–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º:*",
                reply_markup=get_main_menu_keyboard(user_id),
                parse_mode="Markdown"
            )
        elif user.is_technician():
            bot.send_message(
                user_id,
                f"{greeting}\n–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ *–ú–∞—Å—Ç–µ—Ä*.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=reply_keyboard,
                parse_mode="Markdown"
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
            bot.send_message(
                user_id,
                "üì≤ *–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º:*",
                reply_markup=get_main_menu_keyboard(user_id),
                parse_mode="Markdown"
            )
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
        bot.send_message(
            user_id,
            f"{greeting}\n\n–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. "
            "–í–∞–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏."
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        admins = [user for user in get_all_users() if user.is_admin()]
        
        if admins:
            username_info = f" (@{username})" if username else ""
            notification = (
                f"üîî *–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ*\n\n"
                f"üë§ {first_name} {last_name or ''}{username_info}\n"
                f"üÜî ID: {user_id}\n\n"
            )
            
            # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø—Ä–∏–Ω—è—Ç—å/–æ—Ç–∫–∞–∑–∞—Ç—å
            keyboard = InlineKeyboardMarkup(row_width=2)
            approve_button = InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"approve_{user_id}")
            reject_button = InlineKeyboardButton(text="‚ùå –û—Ç–∫–∞–∑–∞—Ç—å", callback_data=f"reject_{user_id}")
            keyboard.add(approve_button, reject_button)
            keyboard.add(InlineKeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", callback_data="manage_users"))
            
            for admin in admins:
                try:
                    bot.send_message(admin.user_id, notification, parse_mode="Markdown", reply_markup=keyboard)
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin.user_id}: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def handle_help_command(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
    """
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = get_user(user_id)
    
    if not user or not user.is_approved:
        bot.reply_to(
            message,
            "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    help_text = "üîç –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞\n\n"
    
    # –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    help_text += "–û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
    help_text += "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
    help_text += "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
    
    # –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    if user.is_admin():
        help_text += "–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
        help_text += "/all_orders - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤\n"
        help_text += "/manage_users - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
        help_text += "\n–ö–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        help_text += "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã\n"
        help_text += "‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        help_text += "‚Ä¢ –ù–∞–∑–Ω–∞—á–∞—Ç—å –º–∞—Å—Ç–µ—Ä–æ–≤ –Ω–∞ –∑–∞–∫–∞–∑—ã\n"
        help_text += "‚Ä¢ –ò–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤\n"
        help_text += "‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤\n"
    elif user.is_dispatcher():
        help_text += "–ö–æ–º–∞–Ω–¥—ã –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞:\n"
        help_text += "/new_order - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑\n"
        help_text += "/my_orders - –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤–∞–º–∏ –∑–∞–∫–∞–∑–æ–≤\n"
        help_text += "\n–ö–∞–∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        help_text += "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã\n"
        help_text += "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤–∞–º–∏ –∑–∞–∫–∞–∑—ã\n"
    elif user.is_technician():
        help_text += "–ö–æ–º–∞–Ω–¥—ã –º–∞—Å—Ç–µ—Ä–∞:\n"
        help_text += "/my_assigned_orders - –ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –≤–∞–º –∑–∞–∫–∞–∑–æ–≤\n"
        help_text += "\n–ö–∞–∫ –º–∞—Å—Ç–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        help_text += "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –≤–∞–º –∑–∞–∫–∞–∑—ã\n"
        help_text += "‚Ä¢ –û–±–Ω–æ–≤–ª—è—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–æ–≤\n"
        help_text += "‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç\n"
        help_text += "‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—Ç–µ —Å –∑–∞–∫–∞–∑–∞–º–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤
    if not user.is_technician():
        help_text += "\n–†–∞–±–æ—Ç–∞ —Å –∑–∞–∫–∞–∑–∞–º–∏:\n"
        help_text += "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞: —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã\n"
        help_text += "‚Ä¢ –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤: –Ω–æ–≤—ã–π > –Ω–∞–∑–Ω–∞—á–µ–Ω > –≤ —Ä–∞–±–æ—Ç–µ > –∑–∞–≤–µ—Ä—à–µ–Ω\n"
        help_text += "‚Ä¢ –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∑–∞–∫–∞–∑—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /order_<–Ω–æ–º–µ—Ä>\n"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–∫—É
    bot.send_message(user_id, help_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /new_order (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤)
@bot.message_handler(commands=['new_order'])
def handle_new_order_command(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /new_order (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤)
    """
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = get_user(user_id)
    
    if not user or not user.is_approved:
        bot.reply_to(
            message,
            "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not (user.is_dispatcher() or user.is_admin()):
        bot.reply_to(
            message,
            "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    bot.send_message(
        user_id,
        "üìù *–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞*\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:",
        parse_mode="Markdown"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_state(user_id, "waiting_for_phone")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /my_orders (–¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤)
@bot.message_handler(commands=['my_orders'])
def handle_my_orders_command(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /my_orders (–¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤)
    """
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = get_user(user_id)
    
    if not user or not user.is_approved:
        bot.reply_to(
            message,
            "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not (user.is_dispatcher() or user.is_admin()):
        bot.reply_to(
            message,
            "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    orders = get_orders_by_user(user_id)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∏ –ø–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    role = 'admin' if user.is_admin() else 'dispatcher' if user.is_dispatcher() else 'technician'
    message_text, keyboard = format_orders_list(orders, user_role=role)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–∫–∞–∑–∞–º–∏
    bot.send_message(user_id, message_text, reply_markup=keyboard, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /my_assigned_orders (–¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤)
@bot.message_handler(commands=['my_assigned_orders'])
def handle_my_assigned_orders_command(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /my_assigned_orders (–¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤)
    """
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = get_user(user_id)
    
    if not user or not user.is_approved:
        bot.reply_to(
            message,
            "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–∞—Å—Ç–µ—Ä–æ–º
    if not user.is_technician():
        bot.reply_to(
            message,
            "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    orders = get_assigned_orders(user_id)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∏ –ø–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    # –î–ª—è –º–∞—Å—Ç–µ—Ä–∞ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–ª—å 'technician'
    message_text, keyboard = format_orders_list(orders, user_role='technician')
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–∫–∞–∑–∞–º–∏
    bot.send_message(user_id, message_text, reply_markup=keyboard, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /all_orders (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
@bot.message_handler(commands=['all_orders'])
def handle_all_orders_command(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /all_orders (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
    """
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = get_user(user_id)
    
    if not user or not user.is_approved:
        bot.reply_to(
            message,
            "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º
    if not (user.is_admin() or user.is_dispatcher()):
        bot.reply_to(
            message,
            "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
    orders = get_all_orders()
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∏ –ø–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    role = 'admin' if user.is_admin() else 'dispatcher' if user.is_dispatcher() else 'technician'
    message_text, keyboard = format_orders_list(orders, user_role=role)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–∫–∞–∑–∞–º–∏
    bot.send_message(user_id, message_text, reply_markup=keyboard, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /manage_users (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
@bot.message_handler(commands=['manage_users'])
def handle_manage_users_command(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /manage_users (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
    """
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = get_user(user_id)
    
    if not user or not user.is_approved:
        bot.reply_to(
            message,
            "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.reply_to(
            message,
            "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    bot.send_message(
        user_id,
        "üë• *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_user_management_keyboard(),
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /order_<id> –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∑–∞–∫–∞–∑—É
@bot.message_handler(regexp=r"^/order_(\d+)$")
def handle_order_command(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /order_<id> –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∑–∞–∫–∞–∑—É
    """
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = get_user(user_id)
    
    if not user or not user.is_approved:
        bot.reply_to(
            message,
            "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    match = re.match(r"^/order_(\d+)$", message.text)
    if match:
        order_id = int(match.group(1))
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
        order = get_order(order_id)
        
        if not order:
            bot.reply_to(message, "–ó–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        role = 'admin' if user.is_admin() else 'dispatcher' if user.is_dispatcher() else 'technician'
        message_text = order.format_for_display(user_role=role)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        keyboard = None
        if user.is_admin():
            keyboard = get_order_management_keyboard(order_id)
        elif user.is_dispatcher() and order.dispatcher_id == user_id:
            keyboard = get_order_management_keyboard(order_id)
        elif user.is_technician():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–∑–Ω–∞—á–µ–Ω –ª–∏ –∑–∞–∫–∞–∑ —ç—Ç–æ–º—É –º–∞—Å—Ç–µ—Ä—É
            technicians = get_order_technicians(order_id)
            is_assigned = any(tech.technician_id == user_id for tech in technicians)
            
            if is_assigned:
                keyboard = get_technician_order_keyboard(order_id)
            else:
                keyboard = get_back_to_main_menu_keyboard()
        else:
            keyboard = get_back_to_main_menu_keyboard()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
        bot.send_message(user_id, message_text, reply_markup=keyboard, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç inline-–∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç inline-–∫–Ω–æ–ø–æ–∫
    """
    user_id = call.from_user.id
    message_id = call.message.message_id
    callback_data = call.data
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = get_user(user_id)
    
    if not user:
        bot.answer_callback_query(
            call.id,
            "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫—Ä–æ–º–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö callback)
    if not user.is_approved and callback_data != "main_menu" and not callback_data.startswith("approve_") and not callback_data.startswith("reject_"):
        bot.answer_callback_query(
            call.id,
            "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã callback-–∑–∞–ø—Ä–æ—Å–æ–≤
    if callback_data == "main_menu":
        handle_main_menu_callback(user_id, message_id)
    elif callback_data == "help":
        handle_help_callback(user_id, message_id)
    elif callback_data == "new_order":
        handle_new_order_callback(user_id, message_id)
    elif callback_data == "my_orders":
        handle_my_orders_callback(user_id, message_id)
    elif callback_data == "my_assigned_orders":
        handle_my_assigned_orders_callback(user_id, message_id)
    elif callback_data == "all_orders":
        handle_all_orders_callback(user_id, message_id)
    elif callback_data == "manage_users":
        handle_manage_users_callback(user_id, message_id)
    elif callback_data == "list_users":
        handle_list_users_callback(user_id, message_id)
    elif callback_data == "approval_requests":
        handle_approval_requests_callback(user_id, message_id)
    elif callback_data.startswith("approve_"):
        user_to_approve = int(callback_data.split("_")[1])
        handle_approve_user_callback(user_id, message_id, user_to_approve)
    elif callback_data.startswith("reject_"):
        user_to_reject = int(callback_data.split("_")[1])
        handle_reject_user_callback(user_id, message_id, user_to_reject)
    elif callback_data == "add_admin":
        handle_add_admin_callback(user_id, message_id)
    elif callback_data == "add_dispatcher":
        handle_add_dispatcher_callback(user_id, message_id)
    elif callback_data == "add_technician":
        handle_add_technician_callback(user_id, message_id)
    elif callback_data.startswith("set_admin_"):
        user_to_set = int(callback_data.split("_")[2])
        handle_set_role_callback(user_id, message_id, user_to_set, "admin")
    elif callback_data.startswith("set_dispatcher_"):
        user_to_set = int(callback_data.split("_")[2])
        handle_set_role_callback(user_id, message_id, user_to_set, "dispatcher")
    elif callback_data.startswith("set_technician_"):
        user_to_set = int(callback_data.split("_")[2])
        handle_set_role_callback(user_id, message_id, user_to_set, "technician")
    elif callback_data == "manage_templates":
        handle_manage_templates_callback(user_id, message_id)
    elif callback_data == "view_templates":
        handle_view_templates_callback(user_id, message_id)
    elif callback_data == "add_template":
        handle_add_template_callback(user_id, message_id)
    elif callback_data.startswith("use_template_"):
        template_id = int(callback_data.split("_")[2])
        handle_use_template_callback(user_id, message_id, template_id)
    elif callback_data.startswith("edit_template_"):
        template_id = int(callback_data.split("_")[2])
        handle_edit_template_callback(user_id, message_id, template_id)
    elif callback_data.startswith("delete_template_"):
        template_id = int(callback_data.split("_")[2])
        handle_delete_template_callback(user_id, message_id, template_id)
    elif callback_data.startswith("order_"):
        order_id = int(callback_data.split("_")[1])
        handle_order_detail_callback(user_id, message_id, order_id)
    elif callback_data.startswith("change_status_"):
        order_id = int(callback_data.split("_")[2])
        handle_change_status_callback(user_id, message_id, order_id)
    elif callback_data.startswith("status_"):
        parts = callback_data.split("_")
        order_id = int(parts[1])
        
        # –î–ª—è —Å–ª—É—á–∞—è "in_progress", —á–∞—Å—Ç–∏ –±—É–¥—É—Ç: ["status", "order_id", "in", "progress"]
        # –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤: ["status", "order_id", "status_name"]
        if len(parts) > 3 and parts[2] == "in" and parts[3] == "progress":
            status = "in_progress"
        else:
            status = parts[2]
            
        handle_update_status_callback(user_id, message_id, order_id, status)
    elif callback_data.startswith("assign_technician_"):
        order_id = int(callback_data.split("_")[2])
        handle_assign_technician_callback(user_id, message_id, order_id)
    elif callback_data.startswith("assign_"):
        parts = callback_data.split("_")
        order_id = int(parts[1])
        technician_id = int(parts[2])
        handle_assign_order_callback(user_id, message_id, order_id, technician_id)
    elif callback_data.startswith("add_cost_"):
        order_id = int(callback_data.split("_")[2])
        handle_add_cost_callback(user_id, message_id, order_id)
    elif callback_data.startswith("add_description_"):
        order_id = int(callback_data.split("_")[2])
        handle_add_description_callback(user_id, message_id, order_id)
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞–∫–∞–∑–æ–≤
    elif callback_data == "delete_user_menu":
        handle_delete_user_menu_callback(user_id, message_id)
    elif callback_data.startswith("delete_user_"):
        user_to_delete = int(callback_data.split("_")[2])
        handle_delete_user_callback(user_id, message_id, user_to_delete)
    elif callback_data.startswith("confirm_delete_user_"):
        user_to_delete = int(callback_data.split("_")[3])
        handle_confirm_delete_user_callback(user_id, message_id, user_to_delete)
    elif callback_data == "manage_orders":
        handle_manage_orders_callback(user_id, message_id)
    elif callback_data.startswith("delete_order_"):
        order_id = int(callback_data.split("_")[2])
        handle_delete_order_callback(user_id, message_id, order_id)
    elif callback_data.startswith("confirm_delete_order_"):
        order_id = int(callback_data.split("_")[3])
        handle_confirm_delete_order_callback(user_id, message_id, order_id)
    else:
        bot.answer_callback_query(call.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
def handle_main_menu_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ main_menu
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    clear_user_state(user_id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    if user.is_admin():
        message_text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.get_full_name()}!\n–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä*.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    elif user.is_dispatcher():
        message_text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.get_full_name()}!\n–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ *–î–∏—Å–ø–µ—Ç—á–µ—Ä*.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    elif user.is_technician():
        message_text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.get_full_name()}!\n–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ *–ú–∞—Å—Ç–µ—Ä*.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    else:
        message_text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.get_full_name()}!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=message_text,
        reply_markup=get_main_menu_keyboard(user_id),
        parse_mode="Markdown"
    )

def handle_manage_templates_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ manage_templates
    """
    user = get_user(user_id)
    
    if not user or not user.is_admin():
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞–º–∏
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —à–∞–±–ª–æ–Ω—ã", callback_data="view_templates"),
        InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω", callback_data="add_template"),
        InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text="üõ†Ô∏è *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏ –ø—Ä–æ–±–ª–µ–º*\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å, –¥–æ–±–∞–≤–ª—è—Ç—å, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —É–¥–∞–ª—è—Ç—å —à–∞–±–ª–æ–Ω—ã —Ç–∏–ø–∏—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤.",
        parse_mode="Markdown",
        reply_markup=keyboard
    )

def handle_view_templates_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ view_templates
    """
    user = get_user(user_id)
    
    if not user or not (user.is_admin() or user.is_dispatcher()):
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω—ã –ø—Ä–æ–±–ª–µ–º
    templates = get_problem_templates()
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º —à–∞–±–ª–æ–Ω–æ–≤
    message_text = "üìã *–®–∞–±–ª–æ–Ω—ã –ø—Ä–æ–±–ª–µ–º*\n\n"
    
    if not templates:
        message_text += "–í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–±–ª–µ–º. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω!"
    else:
        for i, template in enumerate(templates):
            message_text += f"*{i+1}. {template.title}*\n"
            message_text += f"{template.description}\n\n"
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    if templates:
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        for template in templates:
            keyboard.add(
                InlineKeyboardButton(f"üìù –†–µ–¥: {template.title[:15]}...", callback_data=f"edit_template_{template.template_id}"),
                InlineKeyboardButton(f"‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_template_{template.template_id}")
            )
            keyboard.add(
                InlineKeyboardButton(f"‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: {template.title[:15]}...", callback_data=f"use_template_{template.template_id}")
            )
    
    if user.is_admin():
        keyboard.add(InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω", callback_data="add_template"))
        keyboard.add(InlineKeyboardButton("¬´ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏", callback_data="manage_templates"))
    else:
        keyboard.add(InlineKeyboardButton("¬´ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=message_text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

def handle_add_template_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ add_template
    """
    user = get_user(user_id)
    
    if not user or not user.is_admin():
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–∞–∑–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text="üìù *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã*\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ù–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –∫–æ–º–ø—å—é—Ç–µ—Ä'):",
        parse_mode="Markdown"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_state(user_id, TEMPLATE_TITLE_INPUT)

def handle_use_template_callback(user_id, message_id, template_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ use_template_<template_id>
    """
    user = get_user(user_id)
    
    if not user or not (user.is_admin() or user.is_dispatcher()):
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –ø—Ä–æ–±–ª–µ–º—ã
    template = get_problem_template(template_id)
    
    if not template:
        bot.answer_callback_query(
            callback_query_id=message_id,
            text="–®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω."
        )
        return
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text="üìù *–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –ø–æ —à–∞–±–ª–æ–Ω—É*\n\n"
        f"*–®–∞–±–ª–æ–Ω:* {template.title}\n"
        f"*–û–ø–∏—Å–∞–Ω–∏–µ:* {template.description}\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:",
        parse_mode="Markdown"
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ user_data
    if user_id not in user_data:
        user_data[user_id] = {}
    user_data[user_id]['problem_description'] = template.description
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_state(user_id, "waiting_for_phone")

def handle_edit_template_callback(user_id, message_id, template_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ edit_template_<template_id>
    """
    user = get_user(user_id)
    
    if not user or not user.is_admin():
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –ø—Ä–æ–±–ª–µ–º—ã
    template = get_problem_template(template_id)
    
    if not template:
        bot.answer_callback_query(
            callback_query_id=message_id,
            text="–®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω."
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞, —á—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_template_title_{template_id}"),
        InlineKeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_template_description_{template_id}"),
        InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥ –∫ —à–∞–±–ª–æ–Ω–∞–º", callback_data="view_templates")
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —à–∞–±–ª–æ–Ω–µ
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=f"‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞*\n\n"
        f"*–ù–∞–∑–≤–∞–Ω–∏–µ:* {template.title}\n"
        f"*–û–ø–∏—Å–∞–Ω–∏–µ:* {template.description}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
        parse_mode="Markdown",
        reply_markup=keyboard
    )

def handle_delete_template_callback(user_id, message_id, template_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ delete_template_<template_id>
    """
    user = get_user(user_id)
    
    if not user or not user.is_admin():
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –ø—Ä–æ–±–ª–µ–º—ã
    template = get_problem_template(template_id)
    
    if not template:
        bot.answer_callback_query(
            callback_query_id=message_id,
            text="–®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω."
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("–î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_template_{template_id}"),
        InlineKeyboardButton("–ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data="view_templates")
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=f"‚ùì *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è*\n\n"
        f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω *{template.title}*?\n\n"
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å.",
        parse_mode="Markdown",
        reply_markup=keyboard
    )

def handle_help_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ help
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É –∫–æ–º–∞–Ω–¥—ã /help)
    help_text = "üîç –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞\n\n"
    
    # –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    help_text += "–û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
    help_text += "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
    help_text += "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
    
    # –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    if user.is_admin():
        help_text += "–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
        help_text += "/all_orders - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤\n"
        help_text += "/manage_users - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
        help_text += "\n–ö–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        help_text += "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã\n"
        help_text += "‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        help_text += "‚Ä¢ –ù–∞–∑–Ω–∞—á–∞—Ç—å –º–∞—Å—Ç–µ—Ä–æ–≤ –Ω–∞ –∑–∞–∫–∞–∑—ã\n"
        help_text += "‚Ä¢ –ò–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤\n"
        help_text += "‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤\n"
    elif user.is_dispatcher():
        help_text += "–ö–æ–º–∞–Ω–¥—ã –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞:\n"
        help_text += "/new_order - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑\n"
        help_text += "/my_orders - –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤–∞–º–∏ –∑–∞–∫–∞–∑–æ–≤\n"
        help_text += "\n–ö–∞–∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        help_text += "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã\n"
        help_text += "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤–∞–º–∏ –∑–∞–∫–∞–∑—ã\n"
    elif user.is_technician():
        help_text += "–ö–æ–º–∞–Ω–¥—ã –º–∞—Å—Ç–µ—Ä–∞:\n"
        help_text += "/my_assigned_orders - –ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –≤–∞–º –∑–∞–∫–∞–∑–æ–≤\n"
        help_text += "\n–ö–∞–∫ –º–∞—Å—Ç–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        help_text += "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –≤–∞–º –∑–∞–∫–∞–∑—ã\n"
        help_text += "‚Ä¢ –û–±–Ω–æ–≤–ª—è—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–æ–≤\n"
        help_text += "‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç\n"
        help_text += "‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—Ç–µ —Å –∑–∞–∫–∞–∑–∞–º–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤
    if not user.is_technician():
        help_text += "\n–†–∞–±–æ—Ç–∞ —Å –∑–∞–∫–∞–∑–∞–º–∏:\n"
        help_text += "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞: —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã\n"
        help_text += "‚Ä¢ –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤: –Ω–æ–≤—ã–π > –Ω–∞–∑–Ω–∞—á–µ–Ω > –≤ —Ä–∞–±–æ—Ç–µ > –∑–∞–≤–µ—Ä—à–µ–Ω\n"
        help_text += "‚Ä¢ –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∑–∞–∫–∞–∑—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /order_<–Ω–æ–º–µ—Ä>\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = get_back_to_main_menu_keyboard()
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º —Å–ø—Ä–∞–≤–∫–∏
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=help_text,
        reply_markup=keyboard
    )

def handle_new_order_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ new_order
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not (user.is_dispatcher() or user.is_admin()):
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∑–∞–∫–∞–∑–∞
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text="üìù *–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞*\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:",
        parse_mode="Markdown"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_state(user_id, "waiting_for_phone")

def handle_my_orders_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ my_orders
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not (user.is_dispatcher() or user.is_admin()):
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    orders = get_orders_by_user(user_id)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∏ –ø–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    role = 'admin' if user.is_admin() else 'dispatcher' if user.is_dispatcher() else 'technician'
    message_text, keyboard = format_orders_list(orders, user_role=role)
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=message_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

def handle_my_assigned_orders_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ my_assigned_orders
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–∞—Å—Ç–µ—Ä–æ–º
    if not user.is_technician():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    orders = get_assigned_orders(user_id)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∏ –ø–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    # –î–ª—è –º–∞—Å—Ç–µ—Ä–∞ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–ª—å 'technician'
    message_text, keyboard = format_orders_list(orders, user_role='technician')
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=message_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

def handle_all_orders_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ all_orders
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º
    if not (user.is_admin() or user.is_dispatcher()):
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
    orders = get_all_orders()
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∏ –ø–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    role = 'admin' if user.is_admin() else 'dispatcher' if user.is_dispatcher() else 'technician'
    message_text, keyboard = format_orders_list(orders, user_role=role)
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=message_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

def handle_manage_users_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ manage_users
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text="üë• *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_user_management_keyboard(),
        parse_mode="Markdown"
    )

def handle_list_users_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ list_users
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users = get_all_users()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    message_text = "üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n"
    
    admins = []
    dispatchers = []
    technicians = []
    
    for u in users:
        username_info = f" (@{u.username})" if u.username else ""
        status = "‚úÖ" if u.is_approved else "‚åõ"
        user_info = f"{status} {u.get_full_name()}{username_info} - ID: {u.user_id}\n"
        
        if u.is_admin():
            admins.append(user_info)
        elif u.is_dispatcher():
            dispatchers.append(user_info)
        elif u.is_technician():
            technicians.append(user_info)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if admins:
        message_text += "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:\n"
        for admin in admins:
            message_text += admin
        message_text += "\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤
    if dispatchers:
        message_text += "–î–∏—Å–ø–µ—Ç—á–µ—Ä—ã:\n"
        for dispatcher in dispatchers:
            message_text += dispatcher
        message_text += "\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
    if technicians:
        message_text += "–ú–∞—Å—Ç–µ—Ä–∞:\n"
        for technician in technicians:
            message_text += technician
        message_text += "\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_users"))
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=message_text,
        reply_markup=keyboard
    )

def handle_approval_requests_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ approval_requests
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    message_text, keyboard = get_approval_requests_keyboard()
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–ø—Ä–æ—Å–æ–≤
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=message_text,
        reply_markup=keyboard
    )

def handle_approve_user_callback(user_id, message_id, user_to_approve):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if approve_user(user_to_approve):
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        approved_user = get_user(user_to_approve)
        
        if approved_user:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
            bot.send_message(
                user_to_approve,
                f"‚úÖ –í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n\n"
                f"–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫: {approved_user.role.capitalize()}\n\n"
                f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞."
            )
            
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            message_text, keyboard = get_approval_requests_keyboard()
            
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.edit_message_text(
                chat_id=user_id,
                message_id=message_id,
                text=message_text,
                reply_markup=keyboard
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            bot.send_message(
                user_id,
                f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {approved_user.get_full_name()} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω."
            )
        else:
            bot.send_message(
                user_id,
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ."
            )
    else:
        bot.send_message(
            user_id,
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        )

def handle_reject_user_callback(user_id, message_id, user_to_reject):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    rejected_user = get_user(user_to_reject)
    
    # –û—Ç–∫–ª–æ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if reject_user(user_to_reject):
        if rejected_user:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏
            try:
                bot.send_message(
                    user_to_reject,
                    "‚ùå –í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n\n"
                    "–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        message_text, keyboard = get_approval_requests_keyboard()
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text=message_text,
            reply_markup=keyboard
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        user_name = rejected_user.get_full_name() if rejected_user else "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        bot.send_message(
            user_id,
            f"‚ùå {user_name} –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω."
        )
    else:
        bot.send_message(
            user_id,
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        )

def handle_add_admin_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ add_admin
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    all_users = get_all_users()
    non_admin_users = [u for u in all_users if not u.is_admin()]
    
    if not non_admin_users:
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="üë§ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n"
            "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏.\n"
            "–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∏—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ.",
            parse_mode="Markdown",
            reply_markup=get_back_to_user_management_keyboard()
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    for u in non_admin_users:
        username_info = f" (@{u.username})" if u.username else ""
        status = "‚úÖ" if u.is_approved else "‚åõ"
        button_text = f"{status} {u.get_full_name()}{username_info}"
        
        if u.is_dispatcher():
            role_text = "–î–∏—Å–ø–µ—Ç—á–µ—Ä"
        elif u.is_technician():
            role_text = "–ú–∞—Å—Ç–µ—Ä"
        else:
            role_text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            
        button_text = f"{button_text} [{role_text}]"
        keyboard.add(InlineKeyboardButton(button_text, callback_data=f"set_admin_{u.user_id}"))
    
    keyboard.add(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_users"))
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text="üë§ *–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º:*\n\n"
             "‚åõ - –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n"
             "‚úÖ - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        parse_mode="Markdown",
        reply_markup=keyboard
    )

def handle_add_dispatcher_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ add_dispatcher
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    all_users = get_all_users()
    non_dispatcher_users = [u for u in all_users if not u.is_dispatcher()]
    
    if not non_dispatcher_users:
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="üë§ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞*\n\n"
            "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞–º–∏.\n"
            "–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∏—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ.",
            parse_mode="Markdown",
            reply_markup=get_back_to_user_management_keyboard()
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    for u in non_dispatcher_users:
        username_info = f" (@{u.username})" if u.username else ""
        status = "‚úÖ" if u.is_approved else "‚åõ"
        button_text = f"{status} {u.get_full_name()}{username_info}"
        
        if u.is_admin():
            role_text = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
        elif u.is_technician():
            role_text = "–ú–∞—Å—Ç–µ—Ä"
        else:
            role_text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            
        button_text = f"{button_text} [{role_text}]"
        keyboard.add(InlineKeyboardButton(button_text, callback_data=f"set_dispatcher_{u.user_id}"))
    
    keyboard.add(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_users"))
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text="üë§ *–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º:*\n\n"
             "‚åõ - –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n"
             "‚úÖ - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        parse_mode="Markdown",
        reply_markup=keyboard
    )

def get_back_to_user_management_keyboard():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥ –¥–ª—è –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    """
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_users"))
    return keyboard

def handle_add_technician_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ add_technician
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    all_users = get_all_users()
    non_technician_users = [u for u in all_users if not u.is_technician()]
    
    if not non_technician_users:
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="üë§ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞*\n\n"
            "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞–º–∏.\n"
            "–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∏—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ.",
            parse_mode="Markdown",
            reply_markup=get_back_to_user_management_keyboard()
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    for u in non_technician_users:
        username_info = f" (@{u.username})" if u.username else ""
        status = "‚úÖ" if u.is_approved else "‚åõ"
        button_text = f"{status} {u.get_full_name()}{username_info}"
        
        if u.is_admin():
            role_text = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
        elif u.is_dispatcher():
            role_text = "–î–∏—Å–ø–µ—Ç—á–µ—Ä"
        else:
            role_text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            
        button_text = f"{button_text} [{role_text}]"
        keyboard.add(InlineKeyboardButton(button_text, callback_data=f"set_technician_{u.user_id}"))
    
    keyboard.add(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_users"))
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text="üë§ *–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–æ–º:*\n\n"
             "‚åõ - –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n"
             "‚úÖ - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    
def handle_set_role_callback(user_id, message_id, target_user_id, role):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ set_{role}_{user_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    target_user = get_user(target_user_id)
    
    if not target_user:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_user_management_keyboard()
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if update_user_role(target_user_id, role):
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –Ω–µ –±—ã–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
        if not target_user.is_approved:
            approve_user(target_user_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏
        role_name = get_role_name(role)
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text=f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_user.get_full_name()} —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ —Ä–æ–ª—å {role_name}.",
            reply_markup=get_user_management_keyboard()
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        try:
            bot.send_message(
                target_user_id,
                f"‚úÖ –í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: *{role_name}*\n\n"
                f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è —ç—Ç–æ–π —Ä–æ–ª–∏.",
                parse_mode="Markdown"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}: {e}")
    else:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=get_back_to_user_management_keyboard()
        )

def handle_order_detail_callback(user_id, message_id, order_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ order_{order_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
    order = get_order(order_id)
    
    if not order:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ó–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    role = 'admin' if user.is_admin() else 'dispatcher' if user.is_dispatcher() else 'technician'
    message_text = order.format_for_display(user_role=role)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keyboard = None
    if user.is_admin():
        keyboard = get_order_management_keyboard(order_id)
    elif user.is_dispatcher() and order.dispatcher_id == user_id:
        keyboard = get_order_management_keyboard(order_id)
    elif user.is_technician():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–∑–Ω–∞—á–µ–Ω –ª–∏ –∑–∞–∫–∞–∑ —ç—Ç–æ–º—É –º–∞—Å—Ç–µ—Ä—É
        technicians = get_order_technicians(order_id)
        is_assigned = any(tech.technician_id == user_id for tech in technicians)
        
        if is_assigned:
            keyboard = get_technician_order_keyboard(order_id)
        else:
            keyboard = get_back_to_main_menu_keyboard()
    else:
        keyboard = get_back_to_main_menu_keyboard()
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text=message_text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
    except Exception as e:
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏
        try:
            bot.edit_message_text(
                chat_id=user_id,
                message_id=message_id,
                text=message_text,
                reply_markup=keyboard
            )
        except Exception as e2:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–∫–∞–∑–æ–º: {e2}")
            bot.send_message(
                user_id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ."
            )

def handle_change_status_callback(user_id, message_id, order_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ change_status_{order_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
    order = get_order(order_id)
    
    if not order:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ó–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=f"üîÑ *–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{order_id}*\n\n"
        f"–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: *{order.status_to_russian()}*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:",
        reply_markup=get_order_status_keyboard(order_id, user_id),
        parse_mode="Markdown"
    )

def handle_update_status_callback(user_id, message_id, order_id, status):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ status_{order_id}_{status}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
    order = get_order(order_id)
    
    if not order:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ó–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
    old_status = order.status
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
    if update_order(order_id, status=status):
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
        updated_order = get_order(order_id)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        role = 'admin' if user.is_admin() else 'dispatcher' if user.is_dispatcher() else 'technician'
        message_text = updated_order.format_for_display(user_role=role) if updated_order else "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ."
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        keyboard = None
        if user.is_admin():
            keyboard = get_order_management_keyboard(order_id)
        elif user.is_dispatcher() and order.dispatcher_id == user_id:
            keyboard = get_order_management_keyboard(order_id)
        elif user.is_technician():
            keyboard = get_technician_order_keyboard(order_id)
        else:
            keyboard = get_back_to_main_menu_keyboard()
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text=message_text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        if updated_order and old_status != status:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            from utils import send_order_status_update_notification
            send_order_status_update_notification(bot, order_id, old_status, status)
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤ –∑–∞–∫–∞–∑–∞
            technicians = get_order_technicians(order_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞–º
            for tech in technicians:
                if tech.technician_id != user_id:  # –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–º—É, –∫—Ç–æ –æ–±–Ω–æ–≤–∏–ª —Å—Ç–∞—Ç—É—Å
                    try:
                        bot.send_message(
                            tech.technician_id,
                            f"üîÑ *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{order_id}*\n\n"
                            f"–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: *{updated_order.status_to_russian()}*\n\n"
                            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /my_assigned_orders –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤.",
                            parse_mode="Markdown"
                        )
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä—É {tech.technician_id}: {e}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É
            if updated_order.dispatcher_id and updated_order.dispatcher_id != user_id:
                try:
                    bot.send_message(
                        updated_order.dispatcher_id,
                        f"üîÑ *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{order_id}*\n\n"
                        f"–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: *{updated_order.status_to_russian()}*\n\n"
                        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /my_orders –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤.",
                        parse_mode="Markdown"
                    )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É {updated_order.dispatcher_id}: {e}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É (–≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)
            all_users = get_all_users()
            for admin_user in all_users:
                if admin_user.is_admin() and admin_user.user_id != user_id:  # –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–º—É, –∫—Ç–æ —Å–∞–º –∏–∑–º–µ–Ω–∏–ª —Å—Ç–∞—Ç—É—Å
                    try:
                        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∑–∞–∫–∞–∑—É
                        order_keyboard = InlineKeyboardMarkup()
                        order_keyboard.add(InlineKeyboardButton("üëÅÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏", callback_data=f"order_{order_id}"))
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                        bot.send_message(
                            admin_user.user_id,
                            f"üîî *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{order_id}*\n\n"
                            f"–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: *{updated_order.status_to_russian()}*\n"
                            f"–ö–ª–∏–µ–Ω—Ç: {updated_order.client_name}\n"
                            f"–¢–µ–ª–µ—Ñ–æ–Ω: {updated_order.client_phone}\n"
                            f"–ò–∑–º–µ–Ω–∏–ª: {user.get_full_name()} ({get_role_name(user.role)})",
                            parse_mode="Markdown",
                            reply_markup=order_keyboard
                        )
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_user.user_id}: {e}")
    else:
        bot.send_message(
            user_id,
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞."
        )

def handle_assign_technician_callback(user_id, message_id, order_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ assign_technician_{order_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º (—É–±—Ä–∞–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞)
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
    order = get_order(order_id)
    
    if not order:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ó–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –º–∞—Å—Ç–µ—Ä–æ–≤
    keyboard = get_technician_list_keyboard(order_id)
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=f"üë§ *–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ –Ω–∞ –∑–∞–∫–∞–∑ #{order_id}*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

def handle_assign_order_callback(user_id, message_id, order_id, technician_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ assign_{order_id}_{technician_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º (—É–±—Ä–∞–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞)
    if not user.is_admin():
        bot.send_message(
            user_id,
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
    order = get_order(order_id)
    
    if not order:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ó–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ—Ö–Ω–∏–∫–µ
    technician = get_user(technician_id)
    
    if not technician:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –¢–µ—Ö–Ω–∏–∫ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –ù–∞–∑–Ω–∞—á–∞–µ–º –º–∞—Å—Ç–µ—Ä–∞ –Ω–∞ –∑–∞–∫–∞–∑
    assignment_id = assign_order(order_id, technician_id, user_id)
    
    if assignment_id:
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
        updated_order = get_order(order_id)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        role = 'admin' if user.is_admin() else 'dispatcher' if user.is_dispatcher() else 'technician'
        message_text = updated_order.format_for_display(user_role=role) if updated_order else "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ."
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º —Å —É—á–µ—Ç–æ–º —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        keyboard = get_order_management_keyboard(order_id, user_role=role)
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text=message_text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä—É –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏
        try:
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∑–∞–∫–∞–∑—É –∏ –∫ —Å–ø–∏—Å–∫—É –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤
            keyboard = InlineKeyboardMarkup()
            keyboard.add(InlineKeyboardButton(f"üëÅÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑ #{order_id}", callback_data=f"order_{order_id}"))
            keyboard.add(InlineKeyboardButton("üîß –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_assigned_orders"))
            
            bot.send_message(
                technician_id,
                f"üìã *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω*\n\n"
                f"–í—ã –±—ã–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –Ω–∞ –∑–∞–∫–∞–∑ #{order_id}.",
                parse_mode="Markdown",
                reply_markup=keyboard
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä—É {technician_id}: {e}")
    else:
        bot.send_message(
            user_id,
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä–∞ –Ω–∞ –∑–∞–∫–∞–∑."
        )

def handle_add_cost_callback(user_id, message_id, order_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ add_cost_{order_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
    order = get_order(order_id)
    
    if not order:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ó–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=f"üí∞ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order_id}*\n\n"
        f"–¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {order.service_cost if order.service_cost is not None else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ):",
        parse_mode="Markdown"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_state(user_id, "waiting_for_cost", order_id)

def handle_add_description_callback(user_id, message_id, order_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ add_description_{order_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
    order = get_order(order_id)
    
    if not order:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ó–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=f"üìù *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order_id}*\n\n"
        f"–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {order.service_description if order.service_description else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç:",
        parse_mode="Markdown"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_state(user_id, "waiting_for_description", order_id)

def handle_delete_user_menu_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ delete_user_menu
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    message_text, keyboard = get_user_list_for_deletion()
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=message_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

def handle_delete_user_callback(user_id, message_id, user_to_delete):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ delete_user_{user_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    user_to_delete_info = get_user(user_to_delete)
    
    if not user_to_delete_info:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_user_{user_to_delete}"),
        InlineKeyboardButton("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data="delete_user_menu")
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=f"‚ö†Ô∏è *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
             f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
             f"*ID:* {user_to_delete_info.user_id}\n"
             f"*–ò–º—è:* {user_to_delete_info.get_full_name()}\n"
             f"*–†–æ–ª—å:* {get_role_name(user_to_delete_info.role)}\n\n"
             "‚ö†Ô∏è –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω—ã–µ (–∑–∞–∫–∞–∑—ã, –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è) –±—É–¥—É—Ç —Ç–∞–∫–∂–µ —É–¥–∞–ª–µ–Ω—ã!",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

def handle_manage_orders_callback(user_id, message_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ manage_orders
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    message_text, keyboard = get_order_list_for_deletion()
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=message_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

def handle_delete_order_callback(user_id, message_id, order_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ delete_order_{order_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
    order = get_order(order_id)
    
    if not order:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ó–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_order_{order_id}"),
        InlineKeyboardButton("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data="manage_orders")
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    bot.edit_message_text(
        chat_id=user_id,
        message_id=message_id,
        text=f"‚ö†Ô∏è *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞*\n\n"
             f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑:\n"
             f"*–ù–æ–º–µ—Ä:* {order.order_id}\n"
             f"*–ö–ª–∏–µ–Ω—Ç:* {order.client_name}\n"
             f"*–¢–µ–ª–µ—Ñ–æ–Ω:* {order.client_phone}\n"
             f"*–°—Ç–∞—Ç—É—Å:* {order.status_to_russian()}\n\n"
             "‚ö†Ô∏è –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç—Ç–∏–º –∑–∞–∫–∞–∑–æ–º –¥–∞–Ω–Ω—ã–µ (–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–æ–≤, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏) –±—É–¥—É—Ç —Ç–∞–∫–∂–µ —É–¥–∞–ª–µ–Ω—ã!",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

def handle_confirm_delete_user_callback(user_id, message_id, user_to_delete):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ confirm_delete_user_{user_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    user_to_delete_info = get_user(user_to_delete)
    
    if not user_to_delete_info:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if delete_user(user_to_delete):
        # –£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text=f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_to_delete_info.get_full_name()} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard(),
            parse_mode="Markdown"
        )
    else:
        # –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
            reply_markup=get_back_to_main_menu_keyboard(),
            parse_mode="Markdown"
        )

def handle_confirm_delete_order_callback(user_id, message_id, order_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ confirm_delete_order_{order_id}
    """
    user = get_user(user_id)
    
    if not user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not user.is_admin():
        bot.send_message(
            user_id,
            "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    order = get_order(order_id)
    
    if not order:
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ó–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard()
        )
        return
    
    # –£–¥–∞–ª—è–µ–º –∑–∞–∫–∞–∑ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if delete_order(order_id):
        # –£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text=f"‚úÖ –ó–∞–∫–∞–∑ #{order_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.",
            reply_markup=get_back_to_main_menu_keyboard(),
            parse_mode="Markdown"
        )
    else:
        # –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
        bot.edit_message_text(
            chat_id=user_id,
            message_id=message_id,
            text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.",
            reply_markup=get_back_to_main_menu_keyboard(),
            parse_mode="Markdown"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    """
    user_id = message.from_user.id
    text = message.text
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = get_user(user_id)
    
    if not user:
        bot.reply_to(
            message,
            "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    state = get_user_state(user_id)
    
    if not state:
        # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.reply_to(
            message,
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."
        )
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if state == "waiting_for_phone":
        handle_phone_input(user_id, text)
    elif state == "waiting_for_name":
        handle_name_input(user_id, text)
    elif state == "waiting_for_address":
        handle_address_input(user_id, text)
    elif state == "waiting_for_datetime":
        handle_datetime_input(user_id, text)
    elif state == "waiting_for_problem":
        handle_problem_input(user_id, text)
    elif state == "waiting_for_admin_id":
        handle_user_id_input(user_id, text, "admin")
    elif state == "waiting_for_dispatcher_id":
        handle_user_id_input(user_id, text, "dispatcher")
    elif state == "waiting_for_technician_id":
        handle_user_id_input(user_id, text, "technician")
    elif state == "waiting_for_cost":
        handle_cost_input(user_id, text)
    elif state == "waiting_for_description":
        handle_description_input(user_id, text)
    else:
        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        bot.reply_to(
            message,
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."
        )
        # –û—á–∏—â–∞–µ–º –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        clear_user_state(user_id)

def handle_phone_input(user_id, text):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if not validate_phone(text):
        bot.send_message(
            user_id,
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä."
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if user_id not in user_data:
        user_data[user_id] = {}
    
    user_data[user_id]['phone'] = text
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞
    bot.send_message(
        user_id,
        "üë§ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞:"
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_state(user_id, "waiting_for_name")

def handle_name_input(user_id, text):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∞
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞
    if user_id not in user_data:
        user_data[user_id] = {}
    
    user_data[user_id]['name'] = text
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–∞
    bot.send_message(
        user_id,
        "üîß –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:"
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_state(user_id, "waiting_for_problem")

def handle_address_input(user_id, text):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∞–¥—Ä–µ—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
    if user_id not in user_data:
        user_data[user_id] = {}
    
    user_data[user_id]['address'] = text
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    bot.send_message(
        user_id,
        "üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '15.05.2025 14:30'):"
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_state(user_id, "waiting_for_datetime")

def handle_datetime_input(user_id, text):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        # –ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤: "15.05.2025 14:30", "15/05/2025 14:30", "15-05-2025 14:30", 
        # –∞ —Ç–∞–∫–∂–µ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞–µ–≤ —Ç–æ–ª—å–∫–æ —Å –¥–∞—Ç–æ–π "15.05.2025" –∏–ª–∏ —Ç–æ–ª—å–∫–æ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º "14:30"
        text = text.strip()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        if user_id not in user_data:
            user_data[user_id] = {}
        
        user_data[user_id]['scheduled_datetime'] = text
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞
        required_fields = ['phone', 'name', 'address', 'problem']
        missing_fields = [field for field in required_fields if field not in user_data[user_id]]
        
        if missing_fields:
            logger.error(f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–æ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: {missing_fields}")
            bot.send_message(
                user_id,
                "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∑–∞–Ω–æ–≤–æ.",
                reply_markup=get_main_menu_keyboard(user_id)
            )
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            if user_id in user_data:
                del user_data[user_id]
            clear_user_state(user_id)
            return
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
        try:
            scheduled_datetime = user_data[user_id].get('scheduled_datetime')
            order_id = save_order(
                user_id,
                user_data[user_id]['phone'],
                user_data[user_id]['name'],
                user_data[user_id]['address'],
                user_data[user_id]['problem'],
                scheduled_datetime=scheduled_datetime
            )
            
            if order_id:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
                order = get_order(order_id)
                
                if order:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
                    bot.send_message(
                        user_id,
                        f"‚úÖ *–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω*\n\n"
                        f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: *#{order_id}*\n\n"
                        f"{order.format_for_display(user_role='dispatcher')}",
                        reply_markup=get_main_menu_keyboard(user_id),
                        parse_mode="Markdown"
                    )
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
                    send_order_notification_to_admins(bot, order_id)
                else:
                    bot.send_message(
                        user_id,
                        "‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–µ–º.",
                        reply_markup=get_main_menu_keyboard(user_id)
                    )
            else:
                bot.send_message(
                    user_id,
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                    reply_markup=get_main_menu_keyboard(user_id)
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {e}")
            bot.send_message(
                user_id,
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=get_main_menu_keyboard(user_id)
            )
        finally:
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            if user_id in user_data:
                del user_data[user_id]
            clear_user_state(user_id)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏: {e}")
        bot.send_message(
            user_id,
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú'."
        )

def handle_problem_input(user_id, text):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    if user_id not in user_data:
        user_data[user_id] = {}
    
    user_data[user_id]['problem'] = text
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
    bot.send_message(
        user_id,
        "üè† –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞:"
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_state(user_id, "waiting_for_address")

def handle_user_id_input(user_id, text, role):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏
    """
    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ID –≤ —á–∏—Å–ª–æ
        target_user_id = int(text)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
        target_user = get_user(target_user_id)
        
        if not target_user:
            bot.send_message(
                user_id,
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–∞–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º.",
                reply_markup=get_user_management_keyboard()
            )
            clear_user_state(user_id)
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if update_user_role(target_user_id, role):
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –Ω–µ –±—ã–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
            if not target_user.is_approved:
                approve_user(target_user_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏
            role_name = "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" if role == "admin" else "–¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞" if role == "dispatcher" else "–º–∞—Å—Ç–µ—Ä–∞"
            bot.send_message(
                user_id,
                f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_user.get_full_name()} —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ —Ä–æ–ª—å {role_name}.",
                reply_markup=get_user_management_keyboard()
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            try:
                bot.send_message(
                    target_user_id,
                    f"‚úÖ –í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: *{role.capitalize()}*\n\n"
                    f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è —ç—Ç–æ–π —Ä–æ–ª–∏.",
                    parse_mode="Markdown"
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}: {e}")
        else:
            bot.send_message(
                user_id,
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=get_user_management_keyboard()
            )
    except ValueError:
        bot.send_message(
            user_id,
            "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.",
            reply_markup=get_user_management_keyboard()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        bot.send_message(
            user_id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=get_user_management_keyboard()
        )
    finally:
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        clear_user_state(user_id)

def handle_cost_input(user_id, text):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥
    """
    # –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞
    order_id = get_current_order_id(user_id)
    
    if not order_id:
        bot.send_message(
            user_id,
            "‚ùå –û—à–∏–±–∫–∞: ID –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_main_menu_keyboard(user_id)
        )
        clear_user_state(user_id)
        return
    
    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —á–∏—Å–ª–æ
        cost = float(text.replace(',', '.'))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è
        if cost < 0:
            bot.send_message(
                user_id,
                "‚ùå –°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ."
            )
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ –≤ –∑–∞–∫–∞–∑–µ
        if update_order(order_id, service_cost=cost):
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
            order = get_order(order_id)
            
            if order:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏
                bot.send_message(
                    user_id,
                    f"‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order_id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.\n\n"
                    f"{order.format_for_display(user_role='technician')}",
                    reply_markup=get_technician_order_keyboard(order_id),
                    parse_mode="Markdown"
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É
                if order.dispatcher_id and order.dispatcher_id != user_id:
                    try:
                        bot.send_message(
                            order.dispatcher_id,
                            f"üí∞ *–û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ #{order_id}*\n\n"
                            f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {cost} —Ä—É–±.\n\n"
                            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /my_orders –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤.",
                            parse_mode="Markdown"
                        )
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É {order.dispatcher_id}: {e}")
            else:
                bot.send_message(
                    user_id,
                    "‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ.",
                    reply_markup=get_main_menu_keyboard(user_id)
                )
        else:
            bot.send_message(
                user_id,
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=get_main_menu_keyboard(user_id)
            )
    except ValueError:
        bot.send_message(
            user_id,
            "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1500 –∏–ª–∏ 1500.50)."
        )
        return
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥: {e}")
        bot.send_message(
            user_id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=get_main_menu_keyboard(user_id)
        )
    finally:
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        clear_user_state(user_id)

def handle_description_input(user_id, text):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç
    """
    # –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞
    order_id = get_current_order_id(user_id)
    
    if not order_id:
        bot.send_message(
            user_id,
            "‚ùå –û—à–∏–±–∫–∞: ID –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_main_menu_keyboard(user_id)
        )
        clear_user_state(user_id)
        return
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç –≤ –∑–∞–∫–∞–∑–µ
        if update_order(order_id, service_description=text):
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
            order = get_order(order_id)
            
            if order:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
                bot.send_message(
                    user_id,
                    f"‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order_id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.\n\n"
                    f"{order.format_for_display(user_role='technician')}",
                    reply_markup=get_technician_order_keyboard(order_id),
                    parse_mode="Markdown"
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É
                if order.dispatcher_id and order.dispatcher_id != user_id:
                    try:
                        bot.send_message(
                            order.dispatcher_id,
                            f"üìù *–û–±–Ω–æ–≤–ª–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order_id}*\n\n"
                            f"–û–ø–∏—Å–∞–Ω–∏–µ: {text}\n\n"
                            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /my_orders –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤.",
                            parse_mode="Markdown"
                        )
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É {order.dispatcher_id}: {e}")
            else:
                bot.send_message(
                    user_id,
                    "‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ.",
                    reply_markup=get_main_menu_keyboard(user_id)
                )
        else:
            bot.send_message(
                user_id,
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=get_main_menu_keyboard(user_id)
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–ø–∏—Å–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç: {e}")
        bot.send_message(
            user_id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=get_main_menu_keyboard(user_id)
        )
    finally:
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        clear_user_state(user_id)